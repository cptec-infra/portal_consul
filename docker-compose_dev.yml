services:
  django:
    build:
      context: .
      dockerfile: portal_backend/Docker/Dockerfile_django
    container_name: portal_django
    ports:
      - "8000:8000"
    volumes:
      - static_volume:/app/static
      - .:/app
    env_file:
      - .env
    networks:
      - portal_net
    mem_limit: 512m
    cpus: 0.5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile_dev
    container_name: portal_frontend
    ports:
      - "3001:3000"
    volumes:
      - ./frontend:/app:cached 
      - node_modules_dev:/app/node_modules
    # command: node --max-old-space-size=3072 node_modules/.bin/next dev
    env_file:
      - .env
    networks:
      - portal_net
    depends_on:
      - django
    # cpus: "2.00"
    # mem_limit: 2g

  celery:
    build:
      context: .
      dockerfile: portal_backend/Docker/Dockerfile_celery
    container_name: portal_celery
    command: /app/start.sh
    volumes:
      - ./portal_backend/Docker/celery_start.sh:/app/start.sh
      - ./portal_backend:/portal_backend
    env_file:
      - .env
    depends_on:
      - django
      - redis
    networks:
      - portal_net
    mem_limit: 768m
    cpus: 0.5

  mongodb:
    image: mongo:7.0
    container_name: portal_mongodb
    ports:
      - "27017:27017"
    volumes:
      - ./portal_backend/data/mongodb:/data/db
      - ./portal_backend/entrypoint-mongo.sh:/entrypoint.sh:ro
    env_file:
      - .env    
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    entrypoint: ["/entrypoint.sh"]
    networks:
      - portal_net
    mem_limit: 768m
    cpus: 0.7

  redis:
    image: redis:7-alpine
    container_name: portal_redis
    ports:
      - "6379:6379"
    networks:
      - portal_net
    mem_limit: 128m
    cpus: 0.3

volumes:
  static_volume:
  node_modules_dev:

networks: 
  portal_net:
